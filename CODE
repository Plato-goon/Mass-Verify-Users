import os
import discord
from discord.ext import commands

# Fetch the bot token from the environment variable
TOKEN = os.getenv('DISCORD_BOT_TOKEN')

# Define intents
intents = discord.Intents.default()
intents.messages = True
intents.members = True  # Enable the intent to receive member events

# Initialize bot with intents
bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    print(f'Bot connected as {bot.user}')

@bot.command()
@commands.has_permissions(administrator=True)
async def verify(ctx):
    UNVERIFIED_ROLE_ID = int(os.getenv('UNVERIFIED_ROLE_ID'))
    VERIFIED_ROLE_ID = int(os.getenv('VERIFIED_ROLE_ID'))
    
    unverified_role = ctx.guild.get_role(UNVERIFIED_ROLE_ID)
    verified_role = ctx.guild.get_role(VERIFIED_ROLE_ID)

    if not unverified_role:
        await ctx.send("The 'unverified' role does not exist.")
        return

    if not verified_role:
        await ctx.send("The 'verified' role does not exist.")
        return

    bot_member = ctx.guild.get_member(bot.user.id)
    assigned_count = 0

    print(f"Checking {len(ctx.guild.members)} members")  # Debug print

    for member in ctx.guild.members:
        print(f"Checking member: {member.name} (Bot: {member.bot})")  # Debug print

        if member.bot:
            print(f"Skipping bot: {member.name}")  # Debug print
            continue

        if verified_role not in member.roles:
            print(f"Member {member.name} does not have the verified role.")  # Debug print

            if unverified_role not in member.roles:
                print(f"Assigning 'unverified' role to: {member.name}")  # Debug print
                await member.add_roles(unverified_role)
                assigned_count += 1
            else:
                print(f"Member {member.name} already has the unverified role.")  # Debug print
        else:
            print(f"Member {member.name} already has the verified role.")  # Debug print

    await ctx.send(f"Assigned the 'unverified' role to {assigned_count} members without the 'verified' role.")
    print(f"Assigned 'unverified' role to {assigned_count} members.")  # Debug print

# Set the port for the web server (optional for Discord bot)
PORT = int(os.environ.get('PORT', 5000))

# Start the bot with optional web server on the specified port
bot.run(TOKEN)
